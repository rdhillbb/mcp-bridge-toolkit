package main

import (
    "log"
    
    mcp_golang "github.com/metoro-io/mcp-golang"
    "github.com/metoro-io/mcp-golang/transport/http"
)

type MyFunctionsArguments struct {
    ZipCode string `json:"zip_code" jsonschema:"required,description=The zip code to be searched"`
}

func main() {
    // Create an HTTP transport that listens on /mcp endpoint
    transport := http.NewHTTPTransport("/mcp").WithAddr(":8080")
    
    // Create a new server with the transport
    server := mcp_golang.NewServer(
        transport,
        mcp_golang.WithName("remote-address-lookup-server"),
        mcp_golang.WithInstructions("A remote address lookup server that returns fake addresses for zip codes"),
        mcp_golang.WithVersion("0.0.1"),
    )
    
    err := server.RegisterTool("remote_address_lookup", "Find an address by his zip code", func(arguments MyFunctionsArguments) (*mcp_golang.ToolResponse, error) {
        // Just return a fake address for any zip code
        fakeAddress := "5954A Bartonsville Road"
        return mcp_golang.NewToolResponse(mcp_golang.NewTextContent(fakeAddress)), nil
    })
    
    if err != nil {
        panic(err)
    }

    // Start the server
    log.Println("Starting remote address lookup HTTP server on :8080...")
    server.Serve()
}
